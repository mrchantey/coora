
apps := 'hello_world hello_led'
export PATH := "./node_modules/.bin:" + env_var('PATH')

npm := 'node "C:\Program Files\nodejs\node_modules\npm\bin\npm-cli.js"'
npx := 'node "C:\Program Files\nodejs\node_modules\npm\bin\npx-cli.js"'

default:
	just --list
@list *app:
	echo {{app}}

w *args:
	echo "watching"
	{{npx}} onchange -i packages/*/src/**/* -- just {{args}}

@all command:
	echo "building all.."
	for app in {{apps}}; do \
		just {{command}} $app; \
	done

command args:
	cd ./packages/cli && \
	{{npx}} onchange -i dist/**/* \
	-k \
	-- node ./dist/main.js {{args}}
	

## Build

target := 'release'

cmd command +args:
	node ./packages/cli/dist/main.js -- {{command}} {{args}}

# deprecated, use cli instead
# @build name *args:
#  cd ./packages/examples && \
#  {{npx}} asc ./src/entry/{{name}}.ts \
#  -o ../../dist/{{name}}/{{target}}.wasm \
#  -t ../../dist/{{name}}/{{target}}.wat \
#  --config ./config/assemblyscript/asconfig.json \
#  --target {{target}} \
#  --stackSize 65536 \
#  --lowMemoryLimit \
# 
# echo "built {{name}}"

@run *args:
	{{npm}} run {{args}}

## POST

ip := '192.168.86.222'

watch-wasm file:
	just cmd watch {{ip}} ./packages/examples/src/entry/{{file}}.ts ./packages
# ip := '192.168.7.1'

get path:
	curl http://{{ip}}/{{path}}


set key value:
	curl http://{{ip}}/set-{{key}} \
	-X POST \
	-d {{value}}
ping:
	curl http://{{ip}}/ping

wasm url crate:

deploy name *args:
	curl http://{{ip}}/sketch \
	-X POST \
	--data-binary @./dist/{{name}}/release.wasm
# --data-binary @./rust_example/target/wasm32-unknown-unknown/release/{{name}}.wasm

deploy-stress:
	while true; do \
		just -f jf_post sketch; \
		echo; \
		sleep 1; \
	done \

test *args:
	{{npx}} jest \
	--watchAll \
	--forceExit --runInBand --detectOpenHandles \
	--config ./config/jest/jest.config.ts \
	{{args}}